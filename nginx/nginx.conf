events {}

http {
  include       mime.types;
  default_type  application/octet-stream;

  # GZIP Compression
  gzip on;
  gzip_disable "msie6";
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  server {
    listen 80;
    server_name localhost;

    # Redirecionamento para HTTPS (caso necessário no futuro)
    # return 301 https://$host$request_uri;

    # Segurança
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Proxy para o backend
    location /api/ {
      proxy_pass http://backend:8080/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy para o frontend
    location / {
      proxy_pass http://frontend:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      try_files $uri $uri/ /index.html;
    }
  }

  # HTTPS block (pré-configurado, descomentável se necessário)
  #
  # server {
  #   listen 443 ssl;
  #   server_name yourdomain.com;

  #   ssl_certificate /etc/nginx/ssl/cert.pem;
  #   ssl_certificate_key /etc/nginx/ssl/key.pem;

  #   include ssl-params.conf;
  # }
}
